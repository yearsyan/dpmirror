plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

android {
    namespace 'io.github.tsioam.mirror'
    compileSdk 35

    defaultConfig {
        applicationId "io.github.tsioam.mirror"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "x86_64", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        aidl = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    applicationVariants.configureEach { variant ->
        def variantName = variant.name
        def taskName = "buildAndCopyRtcServerApk_${variantName}"

        tasks.register(taskName) {
            doLast {
                exec {
                    workingDir "../../server"
                    commandLine "./gradlew", "rtcserver:assembleRelease"
                }

                def sourceApk = file("../../server/rtcserver/build/outputs/apk/release/rtcserver-release-unsigned.apk")
                def targetDir = layout.buildDirectory.dir("intermediates/assets/${variantName}").get().asFile
                def targetFile = new File(targetDir, "rtcserver")

                if (!sourceApk.exists()) {
                    throw new GradleException("rtcserver-release.apk not found!")
                }

                targetDir.mkdirs()
                sourceApk.withInputStream { input ->
                    targetFile.withOutputStream { out ->
                        out << input
                    }
                }

                println "âœ… Copied rtcserver APK to assets/${variantName}/rtcserver"
            }
        }

        variant.mergeAssetsProvider.configure {
            dependsOn(taskName)
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.okhttp
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android
    implementation project(':shared')
    implementation project(':flutter')
    implementation libs.appcompat
    implementation libs.google.material
    implementation libs.shizuku
    implementation libs.shizuku.provider
    implementation libs.stream.webrtc.android
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
apply from: "$project.rootDir/config/android-checkstyle.gradle"